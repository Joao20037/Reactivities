name: üöÄ Deploy to Render

on:
  push:
    branches:
      - main  # Adjust this if your deployment branch is different

env:
  SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

jobs:
  deploy:
    name: üéØ Deploy to Render
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üõ† Ensure jq is installed
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: üöÄ Trigger deployment on Render
      id: trigger
      run: |
        echo "Triggering deployment..."
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Accept: application/json" \
          https://api.render.com/v1/services/$SERVICE_ID/deploys)

        echo "Deploy response: $RESPONSE"

        DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id')

        if [[ "$DEPLOY_ID" == "null" || -z "$DEPLOY_ID" ]]; then
          echo "‚ùå Failed to trigger deployment. Exiting."
          exit 1
        fi

        echo "Deploy ID: $DEPLOY_ID"
        echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT

    - name: ‚è≥ Wait for deployment to complete
      run: |
        echo "Waiting for deployment to complete..."

        for i in {1..60}; do
          RESPONSE=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
            https://api.render.com/v1/deploys/${{ steps.trigger.outputs.deploy_id }})

          echo "Deploy status response: $RESPONSE"

          STATUS=$(echo "$RESPONSE" | jq -r '.status')

          echo "Current status: $STATUS"

          if [[ "$STATUS" == "live" ]]; then
            echo "‚úÖ Deployment succeeded!"
            exit 0
          elif [[ "$STATUS" == "failed" ]]; then
            echo "‚ùå Deployment failed."
            exit 1
          fi

          sleep 10
        done

        echo "‚ùå Deployment timed out."
        exit 1
